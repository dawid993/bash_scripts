awk '{print $0}' inf.txt

# print line number
awk '{print NR,$0}' inf.txt

# print only 2nd column
awk -F',' '{print $2}' inf.txt

# print in specific format
# NF last fieldca
awk -F',' '{printf "%-6s %-30s %6.2f\n",  $1, $2, $NF}' inf.txt

# print only lines where 2nd column starting with A
awk -F',' '$2 ~ /^A/ {printf "%-6s %-20s %6.2f\n",  $1, $2, $NF}' inf.txt

# print only lines where 2nd column starting with A and last column > 50
awk -F',' '$2 ~ /^A/ && $NF > 50 {printf "%-6s %-20s %6.2f\n",  $1, $2, $NF}' inf.txt

#The command filters and formats rows from a CSV where the second column starts with A, R, or L, and the last column is greater than 15, 
#sorts them by price and quantity in reverse order, and then prints the results in a neatly aligned table.
awk -F',' '$2 ~ /^([A|R|L])/ && $NF > 15 {printf "%s,%s,%.2f,%.2f\n",  $1, $2, $4, $5}' inf.txt | sort -t "," -k 3rn -k 4rn | awk -F',' '{printf "%-6s %-30s %6.2f %6.2f\n",  $1, $2, $3, $4}'

awk -F":" '{ printf "username: %-10s \t\tuid: %-5s\n", $1, $3 }' /etc/passwd

awk -F":" '$3 > 10 { printf "username: %-10s \t\tuid: %-5s\n", $1, $3 }' /etc/passwd

awk -F":" '$3 > 10 { counter++; printf "LP: %d \t\tusername: %-10s \t\tuid: %-5s\n", counter, $1, $3 }' /etc/passwd

# Takes file, skips 1st line , sorts by 2nd column and then 1st column and prints in specific format
tail -n +2 upr.csv | sort -t';' -k2n -k1 | awk -F';' 'BEGIN {printf "%-10s %s %s\n", "Username", " ", "Id"} {printf "%-10s %s %d\n", $1,  " ", $2 }'

